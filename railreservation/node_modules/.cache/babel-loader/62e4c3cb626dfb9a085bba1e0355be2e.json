{"ast":null,"code":"import httpClient from \"../http-common1\";\nlet jwt = localStorage.getItem(\"jwt\");\n\nconst create = data => {\n  return httpClient.post(\"/security/createUser\", data);\n};\n\nconst getAll = () => {\n  return httpClient.get(\"/security/user/g\", {\n    headers: {\n      Authorization: `Bearer ${jwt}`\n    }\n  });\n};\n\nconst getUserId = id => {\n  return httpClient.get(`/security/user/ga/${id}`);\n};\n\nconst getByEmailId = emailId => {\n  return httpClient.get(`/user/getbyEmailid/${emailId}`);\n};\n\nconst getByUserNamee = username => {\n  return httpClient.get(`security/user/getbyusername/${username}`);\n};\n\nconst createBooking = data => {\n  return httpClient.post(\"/security/user/b/i\", data);\n};\n\nconst createTrainDetails = data => {\n  return httpClient.post(\"/security/admin/p/t\", data, {\n    headers: {\n      Authorization: `Bearer ${jwt}`\n    }\n  });\n};\n\nconst createTicketDetails = data => {\n  return httpClient.post(\"/security/admin/p/ticket\", data);\n}; // const getUserId = (id) => {\n//   return httpClient.get(`/security/user/ga/${id}`);\n// };\n\n\nconst authenticate = data => {\n  return httpClient.post(\"/security/authenticate\", data);\n};\n\nconst getBookingByemail = emailId => {\n  return httpClient.get(`security/user/getAllBookingbyemailId/${emailId}`, {\n    headers: {\n      Authorization: `Bearer ${jwt}`\n    }\n  });\n\n  const update = data => {\n    return httpClient.put(\"/security/user/updateBooking\", data, {\n      headers: {\n        Authorization: `Bearer ${jwt}`\n      }\n    });\n  };\n};\n\nexport default {\n  create,\n  getAll,\n  getUserId,\n  getByEmailId,\n  getByUserNamee,\n  createBooking,\n  createTrainDetails,\n  createTicketDetails,\n  authenticate,\n  update,\n  getBookingByemail\n};","map":{"version":3,"names":["httpClient","jwt","localStorage","getItem","create","data","post","getAll","get","headers","Authorization","getUserId","id","getByEmailId","emailId","getByUserNamee","username","createBooking","createTrainDetails","createTicketDetails","authenticate","getBookingByemail","update","put"],"sources":["D:/ReactTaskProject/railreservation/src/services/user.service.js"],"sourcesContent":["import httpClient from \"../http-common1\";\r\nlet jwt = localStorage.getItem(\"jwt\");\r\nconst create = (data) => {\r\n  return httpClient.post(\"/security/createUser\", data);\r\n};\r\n\r\nconst getAll = () => {\r\n  return (httpClient.get(\"/security/user/g\", {\r\n        headers: {\r\n          Authorization: `Bearer ${jwt}`,\r\n        },\r\n      })\r\n    );\r\n};\r\nconst getUserId = (id) => {\r\n  return httpClient.get(`/security/user/ga/${id}`);\r\n};\r\n\r\nconst getByEmailId = (emailId) => {\r\n  return httpClient.get(`/user/getbyEmailid/${emailId}`);\r\n};\r\n\r\nconst getByUserNamee = (username) => {\r\n  return httpClient.get(`security/user/getbyusername/${username}`);\r\n};\r\nconst createBooking = (data) => {\r\n  return httpClient.post(\"/security/user/b/i\", data);\r\n};\r\nconst createTrainDetails = (data) => {\r\n  return (\r\n    httpClient.post(\"/security/admin/p/t\", data, {\r\n    headers: {\r\n      Authorization: `Bearer ${jwt}`,\r\n    },\r\n  })\r\n  );\r\n};\r\n\r\nconst createTicketDetails = (data) => {\r\n  return httpClient.post(\"/security/admin/p/ticket\", data);\r\n};\r\n// const getUserId = (id) => {\r\n//   return httpClient.get(`/security/user/ga/${id}`);\r\n// };\r\n\r\nconst authenticate = (data) => {\r\n  return httpClient.post(\"/security/authenticate\", data);\r\n};\r\n\r\nconst getBookingByemail=(emailId)=>{\r\n  return (httpClient.get(`security/user/getAllBookingbyemailId/${emailId}`,{\r\n    headers: {\r\n      Authorization: `Bearer ${jwt}`,\r\n    },\r\n  })\r\n);\r\nconst update = (data) => {\r\n  return (httpClient.put(\"/security/user/updateBooking\", data, {\r\n    headers: {\r\n      Authorization: `Bearer ${jwt}`,\r\n    },\r\n  })\r\n  );\r\n};\r\n}\r\nexport default {\r\n  create,\r\n  getAll,\r\n  getUserId,\r\n  getByEmailId,\r\n  getByUserNamee,\r\n  createBooking,\r\n  createTrainDetails,\r\n  createTicketDetails,\r\n  authenticate,\r\n  update,\r\n  getBookingByemail\r\n};"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,IAAIC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAV;;AACA,MAAMC,MAAM,GAAIC,IAAD,IAAU;EACvB,OAAOL,UAAU,CAACM,IAAX,CAAgB,sBAAhB,EAAwCD,IAAxC,CAAP;AACD,CAFD;;AAIA,MAAME,MAAM,GAAG,MAAM;EACnB,OAAQP,UAAU,CAACQ,GAAX,CAAe,kBAAf,EAAmC;IACrCC,OAAO,EAAE;MACPC,aAAa,EAAG,UAAST,GAAI;IADtB;EAD4B,CAAnC,CAAR;AAMD,CAPD;;AAQA,MAAMU,SAAS,GAAIC,EAAD,IAAQ;EACxB,OAAOZ,UAAU,CAACQ,GAAX,CAAgB,qBAAoBI,EAAG,EAAvC,CAAP;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAIC,OAAD,IAAa;EAChC,OAAOd,UAAU,CAACQ,GAAX,CAAgB,sBAAqBM,OAAQ,EAA7C,CAAP;AACD,CAFD;;AAIA,MAAMC,cAAc,GAAIC,QAAD,IAAc;EACnC,OAAOhB,UAAU,CAACQ,GAAX,CAAgB,+BAA8BQ,QAAS,EAAvD,CAAP;AACD,CAFD;;AAGA,MAAMC,aAAa,GAAIZ,IAAD,IAAU;EAC9B,OAAOL,UAAU,CAACM,IAAX,CAAgB,oBAAhB,EAAsCD,IAAtC,CAAP;AACD,CAFD;;AAGA,MAAMa,kBAAkB,GAAIb,IAAD,IAAU;EACnC,OACEL,UAAU,CAACM,IAAX,CAAgB,qBAAhB,EAAuCD,IAAvC,EAA6C;IAC7CI,OAAO,EAAE;MACPC,aAAa,EAAG,UAAST,GAAI;IADtB;EADoC,CAA7C,CADF;AAOD,CARD;;AAUA,MAAMkB,mBAAmB,GAAId,IAAD,IAAU;EACpC,OAAOL,UAAU,CAACM,IAAX,CAAgB,0BAAhB,EAA4CD,IAA5C,CAAP;AACD,CAFD,C,CAGA;AACA;AACA;;;AAEA,MAAMe,YAAY,GAAIf,IAAD,IAAU;EAC7B,OAAOL,UAAU,CAACM,IAAX,CAAgB,wBAAhB,EAA0CD,IAA1C,CAAP;AACD,CAFD;;AAIA,MAAMgB,iBAAiB,GAAEP,OAAD,IAAW;EACjC,OAAQd,UAAU,CAACQ,GAAX,CAAgB,wCAAuCM,OAAQ,EAA/D,EAAiE;IACvEL,OAAO,EAAE;MACPC,aAAa,EAAG,UAAST,GAAI;IADtB;EAD8D,CAAjE,CAAR;;EAMF,MAAMqB,MAAM,GAAIjB,IAAD,IAAU;IACvB,OAAQL,UAAU,CAACuB,GAAX,CAAe,8BAAf,EAA+ClB,IAA/C,EAAqD;MAC3DI,OAAO,EAAE;QACPC,aAAa,EAAG,UAAST,GAAI;MADtB;IADkD,CAArD,CAAR;EAMD,CAPD;AAQC,CAfD;;AAgBA,eAAe;EACbG,MADa;EAEbG,MAFa;EAGbI,SAHa;EAIbE,YAJa;EAKbE,cALa;EAMbE,aANa;EAObC,kBAPa;EAQbC,mBARa;EASbC,YATa;EAUbE,MAVa;EAWbD;AAXa,CAAf"},"metadata":{},"sourceType":"module"}